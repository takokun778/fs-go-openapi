openapi: 3.0.0
info:
  title: lambddda
  version: 0.1.0
  description: lambda Ã— ddd Project
  license:
    name: UNLICENSED
  contact:
    name: takokun
servers:
  - url: 'http://localhost:3000'
paths:
  '/api/user/${id}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: id
        in: path
        required: true
        description: UserID
    get:
      summary: Get User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                example:
                  value:
                    id: 47690fac-0568-11ed-b939-0242ac120002
                    firstName: Rei
                    lastName: Ozono
                    birthday: '2000-04-18'
        '404':
          description: Not Found
      operationId: get-user
      description: Get User
      tags:
        - User
    put:
      summary: Update User
      operationId: put-user
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateBody'
      description: Update User
      tags:
        - User
    delete:
      summary: Delete User
      operationId: delete-user
      responses:
        '200':
          description: OK
      description: Delete User
      tags:
        - User
  /api/user:
    post:
      summary: Create User
      operationId: post-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                example:
                  value:
                    id: 47690fac-0568-11ed-b939-0242ac120002
                    firstName: Rei
                    lastName: Ozono
                    birthday: '2000-04-18'
        '400':
          description: Bad Request
      description: Create User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateBody'
      tags:
        - User
    parameters: []
components:
  schemas:
    User:
      type: object
      x-examples:
        example:
          id: 47690fac-0568-11ed-b939-0242ac120002
          firstName: Rei
          lastName: Ozono
          birthday: '2000-04-18'
      description: User Model
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        birthday:
          type: string
      required:
        - id
        - firstName
        - lastName
        - birthday
    UserCreateBody:
      type: object
      x-examples:
        example:
          firstName: Rei
          lastName: Ozono
          birthday: '2000-04-18'
      description: Create User Model
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthday:
          type: string
      required:
        - firstName
        - lastName
        - birthday
    UserUpdateBody:
      type: object
      x-examples:
        example:
          firstName: Rei
          lastName: Ozono
          birthday: '2000-04-18'
      description: Update User Model
      properties:
        firstName:
          type: string
        lastName:
          type: string
        birthday:
          type: string
      required:
        - firstName
        - lastName
        - birthday
  requestBodies: {}
  responses: {}
tags:
  - name: User
